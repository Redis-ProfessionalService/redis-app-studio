<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Maven Targets:
     http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference
     mvn validate          Validate the project is correct and all necessary information is available.
     mvn compile           Compile the source code of the project.
     mvn test              Test the compiled source code using a suitable unit testing framework.
     mvn source:jar        Creates source jar (you must manually copy to local repository).
     mvn javadoc:jar       Creates JavaDoc jar (you must manually copy to local repository).
     mvn package           Take the compiled code and package it into a JAR.
     mvn install           Install the package into the local repository.
     mvn assembly:single   Builds a single JAR that includes all dependencies.
     mvn clean             Removes compiled objects from the target folder.
    -->
    <parent>
        <groupId>com.redis.maven</groupId>
        <artifactId>parent-pom</artifactId>
        <version>1.0</version>
        <relativePath>../../pom/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.redis.ds</groupId>
    <artifactId>ds_content</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>
    <organization>
        <name>Redis</name>
        <url>http://www.redis.com</url>
    </organization>
    <developers>
        <developer>
            <id>acole</id>
            <name>Al Cole</name>
            <email>al@redis.com</email>
            <url>http://www.redis.com</url>
            <organization>Redis</organization>
            <organizationUrl>http://www.redis.com</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>-5</timezone>
        </developer>
    </developers>
    <licenses>
		<license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>
    <dependencies>
		<dependency>
            <groupId>com.redis</groupId>
            <artifactId>foundation</artifactId>
            <version>1.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.tika/tika-parsers -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>1.28</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
            <version>1.28</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
        <!-- Note: This was added because SmartClient was dependent on it, so it needed to be delivered to the local repository -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.4</version>
        </dependency>
    </dependencies>
</project>
